// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace vyger.Controllers
{
    public partial class WorkoutLogsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected WorkoutLogsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Plans()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Plans);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public WorkoutLogsController Actions { get { return MVC.WorkoutLogs; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "WorkoutLogs";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "WorkoutLogs";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Plans = "Plans";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Plans = "Plans";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string date = "date";
            public readonly string post = "post";
        }
        static readonly ActionParamsClass_Plans s_params_Plans = new ActionParamsClass_Plans();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Plans PlansParams { get { return s_params_Plans; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Plans
        {
            public readonly string plan = "plan";
            public readonly string cycle = "cycle";
            public readonly string week = "week";
            public readonly string day = "day";
            public readonly string post = "post";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_WorkoutLogsController : vyger.Controllers.WorkoutLogsController
    {
        public T4MVC_WorkoutLogsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? date);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(System.DateTime? date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            IndexOverride(callInfo, date);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, vyger.Forms.WorkoutLogForm post, System.DateTime? date);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(vyger.Forms.WorkoutLogForm post, System.DateTime? date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "post", post);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            IndexOverride(callInfo, post, date);
            return callInfo;
        }

        [NonAction]
        partial void PlansOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string plan, int cycle, int week, int day);

        [NonAction]
        public override System.Web.Mvc.ActionResult Plans(string plan, int cycle, int week, int day)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Plans);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "plan", plan);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cycle", cycle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "week", week);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "day", day);
            PlansOverride(callInfo, plan, cycle, week, day);
            return callInfo;
        }

        [NonAction]
        partial void PlansOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int plan, int cycle, int week, int day, vyger.Forms.WorkoutLogForm post);

        [NonAction]
        public override System.Web.Mvc.ActionResult Plans(int plan, int cycle, int week, int day, vyger.Forms.WorkoutLogForm post)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Plans);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "plan", plan);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cycle", cycle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "week", week);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "day", day);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "post", post);
            PlansOverride(callInfo, plan, cycle, week, day, post);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
