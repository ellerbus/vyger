@model WorkoutLogDetailViewModel

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()
  @Html.ValidationSummary()
  <div class="form-group">
    <h3>
      @if (Model.CanChangeDate)
      {
        <span class="btn-group float-right">
          <a class="btn btn-outline-secondary"
             href="@Url.Action("Plans", Model.GetPlanRouteValues(Model.LogDate.AddDays(-1)))">
            <i class="fa fa-chevron-left"></i>
          </a>
          <a class="btn btn-outline-secondary"
             href="@Url.Action("Plans", Model.GetPlanRouteValues(Model.LogDate.AddDays(1)))">
            <i class="fa fa-chevron-right"></i>
          </a>
        </span>
      }
      @Model.LogDate.ToString("dddd - MMMM d, yyyy")
    </h3>
  </div>
  <table class="table table-sortable">
    <thead>
      <tr>
        <th style="width: 16px;"></th>
        <th style="width: 200px">Exercise</th>
        <th style="width: 24px;"></th>
        <th>Workout</th>
      </tr>
    </thead>
    @if (Model.Logs.Count() > 0)
    {
      <tbody>
        @foreach (var log in Model.Logs.OrderBy(x => x.SequenceNumber).ThenBy(x => x.Exercise.Name))
        {
          <tr>
            @using (Html.BeginFieldScope(log, "Logs"))
            {
              <td class="drag-handler"></td>
              <td style="vertical-align: middle;">
                @Html.HiddenFor(m => log.PlanId)
                @Html.HiddenFor(m => log.CycleId)
                @Html.HiddenFor(m => log.WeekId)
                @Html.HiddenFor(m => log.DayId)
                @Html.HiddenFor(m => log.ExerciseId)
                @Html.HiddenFor(m => log.SequenceNumber)
                @log.Exercise.Category @log.Exercise.Name
              </td>
              <td class="text-center" style="vertical-align: middle;">
                <a class="pointer delete-log"
                   data-toggle="tooltip" title="Delete Exercise">
                  <i class="fa fa-fw fa-times text-danger"></i>
                </a>
              </td>
              <td>
                @Html.TextBoxFor(m => log.Workout, new { @class = "form-control workout-pattern" })
                @Html.ValidationMessageFor(m => log.Workout, "", new { @class = "form-text text-danger" })
              </td>
            }
          </tr>
        }
      </tbody>
    }
    <tfoot>
      <tr>
        <td colspan="3" class="text-left">
          <button type="submit" class="btn btn-primary">save workout</button>
          <a href="@Url.Action("Index")" class="btn btn-outline-secondary">cancel</a>
        </td>
        <td>
          @if (!Model.CanChangeDate)
          {
            <a href="@Url.Action("Create", new { date = Model.LogDate.ToYMD() })" class="btn btn-sm btn-outline-success float-right">
              <i class="fa fa-fw fa-plus"></i> Add Exercise
            </a>
          }
        </td>
      </tr>
    </tfoot>
  </table>
}

@section Scripts {
  <script type="text/javascript">
    $(function ()
    {
      function resequence($tbody)
      {
        var ids = [];

        $tbody.find('tr').each(function (idx)
        {
          var $exId = $(this).find('input[name$=ExerciseId]');
          var $seq = $(this).find('input[name$=SequenceNumber]');

          $seq.val(idx + 1);

          ids.push($exId.val());
        });
      }

      $('.table-sortable').sortable({
        handle: '.drag-handler',
        containerSelector: 'table',
        itemPath: '> tbody',
        itemSelector: 'tr',
        placeholder: '<tr class="placeholder"/>',
        delay: 250,
        onDrop: function ($item, container, _super)
        {
          var $tbody = $item.closest('tbody');

          resequence($tbody);

          _super($item, container);
        }
      });

      $('.table-sortable .delete-log').click(function ()
      {
        $(this).closest('tr').fadeOut(500, function () { $(this).remove(); });
      });
    });
  </script>
}