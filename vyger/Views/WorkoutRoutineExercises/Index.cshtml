@{
  ViewBag.Title = "Routine Exercises";
}

@model WorkoutRoutineExerciseIndexViewModel

<div class="row justify-content-md-center">
  <div class="col-lg-8 col-md-10">
    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()
      @Html.ValidationSummary()
      @Html.Hidden("Name", Model.Routine.Name)
      @Html.Hidden("Weeks", Model.Routine.Weeks)
      @Html.Hidden("Days", Model.Routine.Days)


      @Html.Partial("_IndexTabs", Model)
      <div class="form-group">
        <table class="table table-sortable">
          @for (var d = 0; d < Model.Routine.Days; d++)
          {
            <thead>
              <tr>
                <th style="width: 16px;"></th>
                <th style="width: 200px">Week @Model.Week, Day @(d + 1)</th>
                <th style="width: 24px;"></th>
                <th class="text-right" colspan="2">
                  <a href="@Url.Action("Create", new { id=Model.Routine.Id, day=d + 1 })" class="btn btn-sm btn-outline-success">
                    <i class="fa fa-fw fa-plus"></i> Day @(d + 1)
                  </a>
                </th>
              </tr>
            </thead>
            <tbody day-id="@(d + 1)">
              @foreach (var exercise in Model.Routine.RoutineExercises.Filter(Model.Week, d + 1, ""))
              {
                @Html.Partial("_IndexRow", exercise)
              }
            </tbody>
          }
          <tfoot>
            <tr>
              <td colspan="5" class="text-left">
                <button type="submit" class="btn btn-primary">save week</button>
                <a href="@Url.Action("Index", "WorkoutRoutines" )" class="btn btn-outline-secondary">cancel</a>
              </td>
            </tr>
          </tfoot>
        </table>
      </div>
    }
  </div>
</div>


@section Scripts {
  <script type="text/javascript">
    $(function ()
    {
      $('input.workout-pattern').change(function ()
      {
        $(this).closest('tr').find('a.copy-forward').hide();
      });
    });




  @*{
    //  base URL
    var url = '@Url.Action("Index", new { id = Model.Routine.Id, week = Model.Week })';

    function resequence($tbody, day)
    {
      var ids = [];

      $tbody.find('tr').each(function (idx)
      {
        var $exId = $(this).find('input[name$=ExerciseId]');
        var $seq = $(this).find('input[name$=SequenceNumber]');

        $seq.val(idx + 1);

        ids.push($exId.val());
      });

      var post_url = url.replace('/Index', '/Sequence') + '&day=' + day + '&exercises=' + ids.join(',');

      var data = { __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val() };

      $.post(post_url, data)
        .done(function (data)
        {
          var msg = 'Successfully Updated Exercise Sequences' +
            ' (day ' + day + ')';

          $.growl.success(msg);
        })
        .fail(function (xhr)
        {
          var msg = 'Could Not Update Exercise Sequences' +
            ' (day ' + day + ')' +
            ' <br/> ' + xhr.statusText;

          $.growl.danger(msg);
        });
    }

    $('input[name$=WorkoutRoutine]').change(function ()
    {
      var $tr = $(this).closest('tr');

      var routine_exercise = {
        WeekId: $tr.find('input[name$=WeekId]').val(),
        DayId: $tr.find('input[name$=DayId]').val(),
        ExerciseId: $tr.find('input[name$=ExerciseId]').val(),
        WorkoutRoutine: $tr.find('input[name$=WorkoutRoutine]').val(),
        SequenceNumber: $tr.find('input[name$=SequenceNumber]').val(),
        __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
      };

      routine_exercise.week = routine_exercise.WeekId;
      routine_exercise.day = routine_exercise.DayId;
      routine_exercise.exercise = routine_exercise.ExerciseId;

      var name = $tr.find('td').eq(1).html();

      var post_url = url.replace('/Index', '/Edit') + '&day=' + routine_exercise.DayId + '&exercise=' + routine_exercise.ExerciseId;

      $.post(post_url, routine_exercise)
        .done(function (data)
        {
          var msg = 'Successfully Updated ' + name +
            ' (day ' + routine_exercise.DayId + ')';

          $tr.find('input[name$=WorkoutRoutine]').val(data.WorkoutRoutine);

          $.growl.success(msg);
        })
        .fail(function (xhr)
        {
          var msg = 'Could Not Update ' + name +
            ' (day ' + routine_exercise.DayId + ')' +
            ' <br/> ' + xhr.statusText;

          $.growl.danger(msg);
        });
    });

    $('.table-sortable').sortable({
      handle: '.drag-handler',
      containerSelector: 'table',
      itemPath: '> tbody',
      itemSelector: 'tr',
      placeholder: '<tr class="placeholder"/>',
      delay: 250,
      onDrop: function ($item, container, _super)
      {
        var $tbody = $item.closest('tbody');
        var day = $item.find('input[name$=DayId]').val();

        resequence($tbody, day);

        _super($item, container);
      }
    });
  });*@
  </script>
}

