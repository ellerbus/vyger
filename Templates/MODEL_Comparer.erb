<%- . ($config.Templates + "/_Utilities.ps1") -%>
<%- $config.OutFile = "Comparers/$($class_name)Comparer.cs" -%>
using System;
using System.Collections.Generic;
using <%= $config.Namespace %>.Models;

namespace <%= $config.Namespace %>.Comparers
{
    /// <summary>
    /// Compares on the Primary Key of <%= $class_name %>
    /// </summary>
    public class <%= $class_name %>Comparer : IEqualityComparer<<%= $class_name %>>, IComparer<<%= $class_name %>>
    {
        public static <%= $class_name %>Comparer Default { get; } = new <%= $class_name %>Comparer();
		
        /// <summary>
        /// Compares x and y on their corresponding Primary Keys
        /// </summary>
        public int Compare(<%= $class_name %> x, <%= $class_name %> y)
        {
			<%- foreach ($c in $primary_keys) { -%>
            int <%= $c.Name | Camel %> = x.<%= $c.Name | Pascal %>.CompareTo(y.<%= $c.Name | Pascal %>);

            if (<%= $c.Name | Camel %> != 0)
            {
                return <%= $c.Name | Camel %>;
            }

			<%- } -%>
			return 0;
        }
		
        /// <summary>
        /// Determines equality of x and y on their corresponding Primary Keys
        /// </summary>
        public bool Equals(<%= $class_name %> x, <%= $class_name %> y)
        {
			return Compare(x, y) == 0;
        }
		
        /// <summary>
        /// Determines a hashcode on <%= $class_name %>'s corresponding Primary Keys
        /// </summary>
        public int GetHashCode(<%= $class_name %> obj)
        {
            unchecked
            {
                int hashCode = 17;
				
				<%- foreach ($c in $primary_keys) { -%>
				hashCode = (hashCode * 397) ^ obj.<%= $c.Name | Pascal %>.GetHashCode();
				<%- } -%>

                return hashCode;
            }
        }
    }
}